name: Cross-Language Encryption/Decryption Tests

on:
  push:
    paths:
      - '**'
      - '.github/workflows/**'
  pull_request:
    paths:
      - '**'
      - '.github/workflows/**'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Update submodules to their latest remote versions
        id: update_step
        run: |
          echo "Attempting to update submodules to their latest remote versions..."
          git submodule update --init --recursive --remote --merge || { echo "::warning::Submodule update failed for some reason."; }

      - name: Setup .NET 8.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install NPM dependencies
        working-directory: ./aes-bridge-js
        run: npm ci

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, openssl, json
          coverage: none

      - name: Install PHP dependencies
        working-directory: ./aes-bridge-php
        run: composer install --no-progress --prefer-dist

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        working-directory: ./aes-bridge-python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install .NET dependencies
        working-directory: ./aes-bridge-dotnet
        run: dotnet restore

      - name: Build dotnet Cli
        working-directory: ./aes-bridge-dotnet/Cli
        run: dotnet build --configuration Release

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
          cache: true

      - name: Download Go modules
        working-directory: ./aes-bridge-go
        run: go mod download

      - name: Run tests
        run: |
          python -m unittest discover -v tests

